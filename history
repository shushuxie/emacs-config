;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(query-replace-history dired-shell-command-history junk-hist face-name-history input-method-history coding-system-history info-lookup-history org-capture--prompt-history counsel-git-history read-char-history magit-git-command-history imenu--history-list magit-revision-history grep-history counsel-git-grep-history grep-files-history grep-regexp-history eww-prompt-history shell-command-history xref--read-identifier-history org-agenda-search-history org-refile-history org-tags-history org-read-date-history org-link--history woman-topic-history search-ring empty-history goto-line-history compile-history buffer-name-history counsel-describe-symbol-history markdown-gfm-language-history counsel-M-x-history swiper-history evil-ex-history ivy-history minibuffer-history read-number-history extended-command-history yes-or-no-p-history file-name-history))
(setq query-replace-history '("dired"))
(setq dired-shell-command-history '("touch 123.org" "touch test1.org" "test1.org" "touch bbbbbb.org" "bbb.org" "touch aaaaa.org" "ls" "ls *.org"))
(setq face-name-history '("rainbow-delimiters-depth-1-face"))
(setq info-lookup-history '(#("dired" 0 5 (ivy-index 1)) #("gdb-script-mode" 0 15 (ivy-index 1 idx 1))))
(setq org-capture--prompt-history '(#("home dail work" 0 14 (ivy-index 0))))
(setq read-char-history '("yes"))
(setq magit-git-command-history '("git rest --hard" "git push --cancel" "git status" "git checkout ef02527 -- 计算机网络自顶向下/第三章：运输层.org" "git checkout ef02572 -- 第三章：运输层.org"))
(setq magit-revision-history '(#("origin/master" 0 13 (ivy-index 2)) #("master" 0 6 (ivy-index 0)) #("d8967eb" 0 7 (ivy-index 0)) #("684c968" 0 7 (ivy-index 0)) #("HEAD" 0 4 (ivy-index 2)) #("ORIG_HEAD" 0 9 (ivy-index 3)) #("FETCH_HEAD" 0 10 (ivy-index 4)) #("testNewBranch" 0 13 (ivy-index 0)) #("ef02572" 0 7 (ivy-index 0)) #("f77f10d" 0 7 (ivy-index 0))))
(setq grep-history '("grep --color=auto -nH --null -e "))
(setq counsel-git-grep-history '(#("包" 0 1 (ivy-index 1)) "2 chars more" #("package" 0 7 (ivy-index 20)) "./emacs/README.org:5:1. init-packages.el #插件管理" #("todo" 0 4 (ivy-index 18)) "./emacs/orgMode语法.org:208:** todo作用" #("arp" 0 3 (ivy-index 2)) "./网络是怎么连接的/2 第二章，探索协议栈和网卡.md:10:- 下面一半是用 IP 协议控制网络包收发操作的部分。在互联网上传送数 据时，数据会被切分成一个一个的网络包 A，而将网络包发送给通信对象的操作就是由 IP 来负责的。此外，IP 中还包括 ICMPA 协议和 ARPB 协议。 ICMP 用于告知网络包传送过程中产生的错误以及各种控制消息，ARP 用 于根据 IP 地址查询相应的以太网 MAC 地址 C。" #("\"广义队列\" ./emacs" 0 14 (ivy-index 0)) "No matches found" #("广义队列" 0 4 (ivy-index 0)) "error code 2" #("-rl \"ide*\"." 0 11 (ivy-index 0)) "No matches found" #("main" 0 4 (ivy-index 220)) "./算法：C语言实现/广义队列(栈,队列).org:465:    int main(int argc,char *argv[]) {" "./操作系统导论/OS-homework/ostep-homework/threads-cv/Makefile:2:BINARIES = main-two-cvs-while main-two-cvs-if main-one-cv-while main-two-cvs-while-extra-unlock" #("队列" 0 2 (ivy-index 0))))
(setq grep-files-history '(#("*.org" 0 5 (ivy-index 0))))
(setq grep-regexp-history '("广义队列" "队列"))
(setq eww-prompt-history '("www.google.com" "www.baidu.com"))
(setq shell-command-history '("pwd | pbcopy" "pwd"))
(setq org-agenda-search-history '("ROUTINE" "small" "check" "entered" "note" "使用 添加内容" "使用" "任务"))
(setq org-refile-history '(#("2023" 0 4 (ivy-index 0 idx 0))))
(setq org-tags-history '(#("daily" 0 5 (ivy-index 0)) "todos" "tab1" #("small" 0 5 (ivy-index 0)) ":ARCHIVE:" "tagss" #("TODO" 0 4 (ivy-index 0)) #("work" 0 4 (ivy-index 0)) #("list" 0 4 (ivy-index 0)) #("haha" 0 4 (ivy-index 1))))
(setq org-read-date-history '("8pm    " "15:00    " "15:00pm    " "   " "11:00    " "+1w    " "9:30pm    " "   " "+1 10:30pm    " "19:48    " "   " "-1    " "-2    " "   " "2024-05-23    " "   " "                                                                                    " "+2    " "+3    " "   " "-1    " "            " "+2    " "+1    " "-3    " "   " "    " " 22                 " "    " "   " "                      " "     " "    " "   " "          " "23:47:22    " "   " "                  " "   "))
(setq search-ring '(#("DOING" 0 5 (isearch-case-fold-search nil isearch-regexp-function nil)) #("display" 0 7 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq compile-history '("gcc a.c -o a" "make -k "))
(setq buffer-name-history '(#("*shell*" 0 7 (ivy-index 0)) #("4反射.org" 0 7 (ivy-index 0)) #("README.md" 0 9 (ivy-index 1)) #("a" 0 1 (ivy-index 0)) #("b.txt" 0 5 (ivy-index 0)) #("*eshell*" 0 8 (ivy-index 0)) #("emacs学习.md" 0 10 (ivy-index 1)) #("init.el" 0 7 (ivy-index 0)) #("blog" 0 4 (ivy-index 0)) #("001字符串空格替换.md<算法练习>" 0 19 (ivy-index 0)) #("001字符串空格替换.md" 0 13 (ivy-index 1))))
(setq counsel-describe-symbol-history '(#("^load-t" 0 7 (ivy-index 0)) "load-true-file-name" #("^org agenda files" 0 17 (ivy-index 0)) "org-agenda-files" "org-agenda-files" "org-agenda-files" #("^org display custo" 0 18 (ivy-index 0)) "org-display-custom-times" "org-agenda-files" "org-agenda-files" "org-agenda-files" "org-agenda-files" #("provide" 0 7 (ivy-index 23)) #("^load-theme" 0 11 (ivy-index 0)) "load-theme" "load-theme"))
(setq markdown-gfm-language-history '(#("c++" 0 3 (ivy-index 17)) #("java" 0 4 (ivy-index 0)) #("1c-enterprise" 0 13 (ivy-index 0))))
(setq counsel-M-x-history '(#("^eva" 0 4 (ivy-index 0)) "eval-buffer" #("^counsel mini" 0 13 (ivy-index 0)) "counsel-minibuffer-history" #("^loa" 0 4 (ivy-index 0)) "load-theme" #("^pa" 0 3 (ivy-index 0)) "package-autoremove" #("^package-re" 0 11 (ivy-index 0)) "package-refresh-contents" #("^" 0 1 (ivy-index 1)) "list-packages" #("^pac" 0 4 (ivy-index 0)) "package-autoremove" #("^lis" 0 4 (ivy-index 0)) "list-packages" #("^package auto" 0 13 (ivy-index 0)) "package-autoremove" "list-packages" "list-packages" "list-packages" "list-packages" #("^package" 0 8 (ivy-index 3)) "package-upgrade" "list-packages" #("^eval" 0 5 (ivy-index 0)) "eval-buffer" #("^treemacs-ver" 0 13 (ivy-index 0)) "treemacs-version" "treemacs-advanced-helpful-hydra" #("^treemacs adv" 0 13 (ivy-index 0)) "treemacs-advanced-helpful-hydra" #("^org element ca" 0 15 (ivy-index 0)) "org-element-cache-reset" "eval-buffer" "eval-buffer" #("^customize-variable" 0 19 (ivy-index 0)) "customize-variable" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "org-version" #("^org-ve" 0 7 (ivy-index 0)) "org-version" #("^hs" 0 3 (ivy-index 0)) "hs-toggle-hiding" "hs-toggle-hiding" "eval-buffer" "eval-buffer" #("^org-cycle" 0 10 (ivy-index 0)) "org-cycle" "eval-buffer" "eval-buffer" "treemacs-resize-icons" #("^tree" 0 5 (ivy-index 1)) "treemacs-resize-icons" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" "eval-buffer" #("^ev" 0 3 (ivy-index 0)) "eval-buffer" #("^time" 0 5 (ivy-index 0)) "time-stamp" #("^dired-dis" 0 10 (ivy-index 0)) "dired-display-file" "eval-buffer" #("^org-agenda-h" 0 13 (ivy-index 0)) "org-agenda-holidays" "package-list-packages" #("^list input" 0 11 (ivy-index 0)) "list-input-methods" #("^toggle-in" 0 10 (ivy-index 0)) "toggle-input-method" "eval-buffer" "eval-buffer" "eval-buffer" "list-packages" "eval-buffer" #("^shell" 0 6 (ivy-index 0)) "shell" #("^tr" 0 3 (ivy-index 1)) "treemacs-resize-icons"))
(setq swiper-history '("magit" #("doom" 0 4 (ivy-index 4)) #("evil-esc" 0 8 (ivy-index 0)) #("dashbo" 0 6 (ivy-index 0)) #("treemacs-mag" 0 12 (ivy-index 0)) #("evil" 0 4 (ivy-index 4)) "evi" #("treemacs-icon" 0 13 (ivy-index 0)) #("magit" 0 5 (ivy-index 5)) #("treemacs-magit" 0 14 (ivy-index 0)) "i" #("treemacs-proj" 0 13 (ivy-index 0)) #("which-key" 0 9 (ivy-index 3)) "treemacs" #("#+" 0 2 (ivy-index 2)) #("ema" 0 3 (ivy-index 0)) #("gtd" 0 3 (ivy-index 2)) "pyimqq" #("pyim" 0 4 (ivy-index 1)) "c" "treemacs-i" #("treemacs" 0 8 (ivy-index 15)) #("treema" 0 6 (ivy-index 9)) "treemacs-icons" #("dash" 0 4 (ivy-index 3)) #("treemacs-load" 0 13 (ivy-index 0)) #("require" 0 7 (ivy-index 2)) "treemac" "tab" #("evil-escape" 0 11 (ivy-index 0)) #("custom" 0 6 (ivy-index 3)) #("files" 0 5 (ivy-index 4)) "todo" #("agend" 0 5 (ivy-index 0)) #("agenda" 0 6 (ivy-index 1)) #("default" 0 7 (ivy-index 5)) "bullets" #("Idea" 0 4 (ivy-index 0)) #("44" 0 2 (ivy-index 1)) #("icons " 0 6 (ivy-index 3)) #("icons" 0 5 (ivy-index 0)) #("all the icons" 0 13 (ivy-index 2)) #("icon" 0 4 (ivy-index 1)) #("all the icon octicon" 0 20 (ivy-index 0)) #("treemacs-all" 0 12 (ivy-index 2)) #("treemacs-all-the-icons-tab" 0 26 (ivy-index 0)) #("treemacs icon" 0 13 (ivy-index 1)) #("blue" 0 4 (ivy-index 2)) #("journal" 0 7 (ivy-index 0)) #("bullet" 0 6 (ivy-index 1)) #("theme" 0 5 (ivy-index 4)) #("dashboard" 0 9 (ivy-index 1)) #("project" 0 7 (ivy-index 6)) #("todo" 0 4 (ivy-index 0)) #("tree" 0 4 (ivy-index 0)) #("treemacs-evil" 0 13 (ivy-index 0)) #("dracula" 0 7 (ivy-index 0)) "full" #("bull" 0 4 (ivy-index 0)) #("moder" 0 5 (ivy-index 0)) #("org-mode" 0 8 (ivy-index 0)) #("org-modern" 0 10 (ivy-index 0)) #("scroll-bar-mode" 0 15 (ivy-index 0)) #("scroll" 0 6 (ivy-index 4)) #("modus" 0 5 (ivy-index 3)) #("org-mod" 0 7 (ivy-index 0)) #("global-org" 0 10 (ivy-index 1)) "global-" "modern" "elpa" #("modern" 0 6 (ivy-index 6)) "mode" #("tables" 0 6 (ivy-index 9)) "avlign" #("valign" 0 6 (ivy-index 0)) #("all-the-i" 0 9 (ivy-index 0)) #("ace-jump-mode" 0 13 (ivy-index 0)) #("ace-window" 0 10 (ivy-index 0)) #("amx" 0 3 (ivy-index 0)) #("blog" 0 4 (ivy-index 0)) #("cursor" 0 6 (ivy-index 0)) #("多文件" 0 3 (ivy-index 0)) #("default-frame-alist" 0 19 (ivy-index 0))))
(setq evil-ex-history '("%s/only in/&/gn" "%s/evil/&/gn" "wq" "'<,'>s/;//g" "wq" "w" "%s/gtd/&/gn" "%s/O/&/gn" "'<,'>s/;//g" #("'<,'>s/\\\"//g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("'<,'>s/;//" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10)) #("'<,'>s/;//g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11)) #("'<,'>s/：/:" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10)) #("'<,'>s/" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7)) #("'<,'>s/：/:" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10)) #("'<,'>s/: /:/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13)) #("w" 0 1 (ex-index 1)) #("%s/indetity/identity/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22)) #("%s/amount/total" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15)) #("%s/count/round" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14)) #("'<,'>s/pascal/ps/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18)) #("'<,'>s/pscal/pascal/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21)) #(">" 0 1 (ex-index 1)) #("make -k" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7)) #("make " 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("exit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #(":w" 0 1 (ex-index 1) 1 2 (ex-index 2))))
(setq ivy-history '(#("emac" 0 4 (ivy-index 1)) "emacs使用技巧.org" #("ini" 0 3 (ivy-index 2)) "init-org.el" "init-packages.el" #("org-babel官方文档" 0 13 (ivy-index 1 idx 1)) "init-packages.el" #("gtd管理日程.org" 0 11 (ivy-index 5)) #("*dashboard*" 0 11 (ivy-index 1)) #("me" 0 2 (ivy-index 0)) "*Messages*" #("mes" 0 3 (ivy-index 0)) "*Messages*" #("mess" 0 4 (ivy-index 0)) "*Messages*" "*Messages*" #("init.el" 0 7 (ivy-index 0)) #("emacs使用技巧.org" 0 13 (ivy-index 1)) #("*Packages*" 0 10 (ivy-index 1)) #("*Messages*" 0 10 (ivy-index 4)) #("*Help*" 0 6 (ivy-index 0)) #("m" 0 1 (ivy-index 0)) "init-packages.el" #("treemacs" 0 8 (ivy-index 6)) "init-packages.el" #("in" 0 2 (ivy-index 0)) "init-packages.el" "init-packages.el" #("pa" 0 2 (ivy-index 0)) "init-packages.el" #("2-twoNumSum.c" 0 13 (ivy-index 2)) #("org-babel编程.org" 0 15 (ivy-index 1)) #("org-babel-load-languages" 0 24 (ivy-index 0)) #("ema" 0 3 (ivy-index 0)) #("init-org.el" 0 11 (ivy-index 2)) #("dired使用.org" 0 11 (ivy-index 1)) #("sma" 0 3 (ivy-index 0)) "smallThings.org" #("dir" 0 3 (ivy-index 0)) #("mail client" 0 11 (ivy-index 0 idx 0)) #("202405201953.57" 0 15 (ivy-index 0)) #("lpr" 0 3 (ivy-index 0)) #("u=rw,g=r,o=r" 0 12 (ivy-index 0)) #("u=rwx,g=rx,o=rx" 0 15 (ivy-index 0)) #("*Directory*" 0 11 (ivy-index 10)) #("touch test1.org" 0 15 (ivy-index 0)) #("dired-x" 0 7 (ivy-index 0)) #("sm" 0 2 (ivy-index 0)) "smallThings.org" #("Default" 0 7 (ivy-index 0 idx 0)) #("leuven-dark" 0 11 (ivy-index 3)) #("doom-dracula" 0 12 (ivy-index 0)) #("tango" 0 5 (ivy-index 11)) #("adwaita" 0 7 (ivy-index 0)) "init-packages.el" #("init-packages.el" 0 16 (ivy-index 2)) #("doom-one" 0 8 (ivy-index 1)) #("doom-ayu-light" 0 14 (ivy-index 4)) #("doom-one-light" 0 14 (ivy-index 0)) #("leuven" 0 6 (ivy-index 5)) #("gt" 0 2 (ivy-index 0)) #("gtd" 0 3 (ivy-index 0)) #("ni" 0 2 (ivy-index 1)) #("init" 0 4 (ivy-index 1)) #("2注解.org" 0 7 (ivy-index 2)) #(" *Treemacs-Scoped-Buffer-#<frame gtd管理日程.org 0x1529b6e30>*" 0 58 (ivy-index 0)) #("sh" 0 2 (ivy-index 0)) "*shell*" #(" *Treemacs-Scoped-Buffer-#<frame gtd管理日程.org 0x148821e30>*" 0 58 (ivy-index 0)) #("em" 0 2 (ivy-index 0)) #("Idea" 0 4 (ivy-index 1)) #("Eclipse" 0 7 (ivy-index 3)) #("Netbeans" 0 8 (ivy-index 2)) #("Iconless" 0 8 (ivy-index 0)) #("magit的使用.org" 0 12 (ivy-index 2)) #("README.org" 0 10 (ivy-index 5)) #(" *Treemacs-Scoped-Buffer-#<frame gtd管理日程.org 0x14686bc30>*" 0 58 (ivy-index 0)) #("nn" 0 2 (ivy-index 0)) #("doom-flatwhite" 0 14 (ivy-index 30)) #("wombat" 0 6 (ivy-index 16)) #("whiteboard" 0 10 (ivy-index 15)) #("wheatgrass" 0 10 (ivy-index 14)) #("modus-vivendi" 0 13 (ivy-index 9)) #("modus-operandi" 0 14 (ivy-index 8)) #("misterioso" 0 10 (ivy-index 7)) #("dichromacy" 0 10 (ivy-index 2)) #("deeper-blue" 0 11 (ivy-index 1)) #("smart-mode-line-light" 0 21 (ivy-index 1)) #("smart-mode-line-respectful" 0 26 (ivy-index 2)) #("tsdh-dark" 0 9 (ivy-index 3)) #("manoj-dark" 0 10 (ivy-index 1)) #("smart-mode-line-dark" 0 20 (ivy-index 9)) #("tango-dark" 0 10 (ivy-index 2)) #("g" 0 1 (ivy-index 0)) #("doom-colors" 0 11 (ivy-index 0)) #("doom-city-lights" 0 16 (ivy-index 2)) #("doom-1337" 0 9 (ivy-index 0)) #("tsdh-light" 0 10 (ivy-index 11)) #("light-blue" 0 10 (ivy-index 10)) #("doom-ayu-mirage" 0 15 (ivy-index 5))))
(setq minibuffer-history '("C,C++配置" "org-babel官方文档" "treemacs:https://orgmode.org/worg/org-contrib/babel/languages/index.html" "TODO" "test*" "2x5" "2x2" "3x6" "3x3" "org" "3x3" "2x3" "ROUTINE" "2x3" "3" "2" "1" "1mm" "10ss" "20ss" "3" "2x2	" "3x3" "2x2" "gtd是什么" "3x3" "3*3" "tags" "文字渲染" "优先级" "todo作用" "src" "3x4" "5x2" "vue官网" "id:https://cn.vuejs.org" "file:imag/Snipaste_2024-01-22_10-19-00.png" "3x3" "xsq" "testNewBranch" "xieshuqiang" "操作系统导论/.DS_Store" "emacs/magit的使用.org" "xieshuqiang" "xieshushu" "shuqiangxie@outlook.com" "3x3" "width=100" "fille:imag/Snipaste_2023-11-1_23-58-23.png" "file:imag/Snipaste_2023-11-19_23-58-23.png" "internet assemble(imag)" "因特网的一些部件(图)" "内部栈图" "数组部分展示图" "cd ./emacs" "-r ./emacs" "emacs" "内敛图片" "一级ADT特性img" "file:imags/Snipaste_2023-11-07_15-08-10.png" "参考博客" "treemacs github地址" "https://github.com/Alexander-Miller/treemacs#customizing-themes-and-icons" "treemacs github地址" "https:https://github.com/Alexander-Miller/treemacs#customizing-themes-and-icons" "2x5" "前面" "前置" "grammer" "2x3" "2x5" "参考博客1" "TODO" "(3)" "WAI" "WAITING" "任务" "DOING" "任务" "work" "标签地址" "orgmode官方文档" "https:orgmode.org/orgguide.pdf" "2x2	" "图片链接" "大纲名称" "*大纲名称" "大纲名称" "跳转到稀疏树" "*稀疏树" "内部链接跳转测试" "test" "链接声明" "lkjgks" "test" "readme文件" "谷歌网址" "https:www.google.com" "谷歌" "2x2"))
(setq read-number-history '("28" "30" "28" "30" "25" "3" "28" "25" "28" "25" "35" "25" "30" "25" "30" "35" "25" "20" "18" "14" "插件的基本使用"))
(setq extended-command-history '("ivy-mode" "evil-mode" #("package-install" 0 15 (ivy-index 0)) #("kill-whole-line" 0 15 (ivy-index 0)) "ivy-mode" "list-packages" "next-line" "hello-world"))
(setq yes-or-no-p-history '("yes" "no" "YES" "yes" "no" "yes" "no" "yes" "no" "yes" "no" "yes" "no" "yes" "es" "yes" "e lsp-ivy" "yes" "es" "yes" "es" "YES" "yes" "no" "yes" "no" "yes" "es" "yes" "no" "yes" "no" "yes"))
(setq file-name-history '("~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/.emacs.d/lisp-config/init-better-default.el" 0 62 (ivy-index 3)) #("/Users/xieshuqiang/.emacs.d/" 0 28 (ivy-index 0)) #("/Users/xieshuqiang/.emacs.d/elpa/treemacs-20240518.932/" 0 55 (ivy-index 1)) #("/Users/xieshuqiang/Desktop/" 0 27 (ivy-index 0)) "~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/Documents/typora/emacs/org-babel编程.org" 0 57 (ivy-index 0)) #("/Users/xieshuqiang/.emacs.d/lisp-config/" 0 40 (ivy-index 1)) #("/Users/xieshuqiang/Documents/typora/emacs/" 0 42 (ivy-index 0)) #("/Users/xieshuqiang/Documents/" 0 29 (ivy-index 0)) "~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/Documents/typora/emacs/test2/1/1" 0 51 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/emacs/test2/2" 0 49 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/emacs/test2/1" 0 49 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/emacs/test3" 0 47 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/emacs/test2" 0 47 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/emacs/test/" 0 47 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/emacs/test" 0 46 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/emacs/dired使用.org" 0 53 (ivy-index 0)) #("/Users/xieshuqiang/.emacs.d/elpa/" 0 33 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/" 0 36 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/java/" 0 41 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/C-language/" 0 47 (ivy-index 4)) #("/Users/xieshuqiang/Documents/typora/emacs/README.org" 0 52 (ivy-index 5)) #("/Users/xieshuqiang/Documents/typora/emacs/emacs使用技巧.org" 0 55 (ivy-index 6)) #("/Users/xieshuqiang/Documents/typora/baike/" 0 42 (ivy-index 5)) #("/Users/xieshuqiang/Documents/typora/*.org" 0 41 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/emacs/ideBuild.org" 0 54 (ivy-index 10)) #("/Users/xieshuqiang/Documents/typora/emacs/magit的使用.org" 0 54 (ivy-index 11)) #("/Users/xieshuqiang/Documents/typora/emacs/gtd管理日程.org" 0 53 (ivy-index 8)) #("/Users/xieshuqiang/.emacs.d/eshell/" 0 35 (ivy-index 6)) #("/Users/xieshuqiang/.emacs.d/lisp-config/init-org.el" 0 51 (ivy-index 7)) #("/Users/xieshuqiang/Documents/typora/baike/bug.org" 0 49 (ivy-index 2)) #("/Users/xieshuqiang/Documents/typora/emacs/#orgmode-language#" 0 60 (ivy-index 4)) #("/Users/xieshuqiang/.emacs.d/games/" 0 34 (ivy-index 7)) #("/Users/xieshuqiang/.emacs.d/lisp-config/custome.el" 0 50 (ivy-index 3)) "~/Documents/typora/.git/COMMIT_EDITMSG" "~/.emacs.d/init.el" "~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/Documents/capture/smallThings.org" 0 52 (ivy-index 0)) #("/Users/xieshuqiang/Documents/capture/" 0 37 (ivy-index 0)) "~/Documents/typora/.git/COMMIT_EDITMSG" "~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/Documents/capture/journal.org" 0 48 (ivy-index 5)) #("/Users/xieshuqiang/Documents/capture/gtd.org" 0 44 (ivy-index 3)) #("/Users/xieshuqiang/.emacs.d/init.el" 0 35 (ivy-index 2)) #("/Users/xieshuqiang/" 0 19 (ivy-index 3)) "~/test2.txt" "~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/Documents/typora/lisp/README.org" 0 51 (ivy-index 0)) "~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/Documents/typora/lisp/1.程序设计的基本元素.org" 0 56 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/lisp" 0 40 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/网络是怎么连接的/test.org" 0 53 (ivy-index 0)) "~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/Documents/typora/emacs/suanfa/hello.c" 0 56 (ivy-index 4)) #("/Users/xieshuqiang/Documents/typora/emacs/suanfa/" 0 49 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/emacs/suanfa/hello" 0 54 (ivy-index 3)) #("/Users/xieshuqiang/Documents/typora/baike/log.org" 0 49 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/baike" 0 41 (ivy-index 0)) "~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/Documents/typora/前端/vue/1.vue基础.org" 0 54 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/前端/vue/1.vue基础" 0 50 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/前端/vue" 0 42 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/前端" 0 38 (ivy-index 0)) "~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/Documents/typora/java/4反射.org" 0 48 (ivy-index 0)) "~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/Documents/typora/java/范型.org" 0 47 (ivy-index 0)) "~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/Documents/typora/java/1设计模式/imag/Snipaste_2024-02-20_21-33-13.png" 0 84 (ivy-index 0)) "~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/Documents/typora/java/1设计模式/imag/Snipaste_2024-01-22_10-08-56.png" 0 84 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/java/1设计模式/imag/" 0 52 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/java/1设计模式/imag/Snipaste_2024-01-19_22-31-31.png" 0 84 (ivy-index 2)) "~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2024-01-07_23-19-45.png" 0 83 (ivy-index 0)) "~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2024-01-02_22-42-16.png" 0 83 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2024-01-02_22-23-30.png" 0 83 (ivy-index 0)) "~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2024-01-02_21-07-18.png" 0 83 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2024-01-02_21-03-56.png" 0 83 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2024-01-02_21-01-18.png" 0 83 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2024-01-02_20-57-24.png" 0 83 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2024-01-02_20-53-50.png" 0 83 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2024-01-02_20-47-41.png" 0 83 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2024-01-02_20-42-13.png" 0 83 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2024-01-02_20-35-42.png" 0 83 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2024-01-02_20-22-29.png" 0 83 (ivy-index 2)) "~/Documents/typora/.git/COMMIT_EDITMSG" "~/Documents/typora/emacs/magit的使用.org" "~/Documents/typora/.git/COMMIT_EDITMSG" #("/Users/xieshuqiang/Documents/typora/blogs/linux日志查看.org" 0 55 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/blogs" 0 41 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2023-12-20_00-39-04.png" 0 83 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2023-12-20_00-38-32.png" 0 83 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2023-12-20_00-31-08.png" 0 83 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2023-12-20_00-30-24.png" 0 83 (ivy-index 0)) #("/Users/xieshuqiang/Documents/typora/计算机网络自顶向下/imag/Snipaste_2023-12-20_00-27-13.png" 0 83 (ivy-index 0))))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq evil-jumps-history '((1 "/Users/xieshuqiang/Documents/typora/emacs/.emacs使用技巧.org.~undo-tree~") (1 "/Users/xieshuqiang/Documents/typora/emacs/.emacs使用技巧.org.~undo-tree~") (1 #4="/Users/xieshuqiang/Documents/typora/emacs/emacs使用技巧.org") (262 #1="/Users/xieshuqiang/.emacs.d/lisp-config/init-org.el") (928 #1#) (7957 #2="/Users/xieshuqiang/.emacs.d/lisp-config/init-packages.el") (7751 #2#) (6941 #2#) (7751 #2#) (7751 #2#) (7751 #2#) (6941 #2#) (2624 #2#) (7729 #2#) (7704 #2#) (6941 #2#) (2624 #2#) (2624 #2#) (7729 #2#) (7704 #2#) (6941 #2#) (6941 #2#) (1 #2#) (5761 #3="/Users/xieshuqiang/Documents/typora/emacs/org-babel编程.org") (1 #3#) (3 "/Users/xieshuqiang/Documents/typora/emacs/gtd管理日程.org") (1602 "/Users/xieshuqiang/Documents/capture/gtd.org") (1 #4#) (367 "/Users/xieshuqiang/.emacs.d/init.el") (1 "/Users/xieshuqiang/Documents/typora/emacs/emacs使用技巧.org")))
